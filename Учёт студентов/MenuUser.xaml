<Window x:Class="StudentAuthorization.MenuUser"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:StudentAuthorization"
        mc:Ignorable="d"
        Title="Список студентов" Height="822" Width="740" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" Icon="/free-icon-task-list-8584777.png" WindowStyle="ThreeDBorderWindow">
    <Window.Resources>
        <Style x:Key="ModernTriStateToggleSwitch" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border Width="60" Height="30" CornerRadius="15" Background="DarkGray">
                            <Grid>
                                <Ellipse x:Name="Thumb" Width="26" Height="26" 
                                 HorizontalAlignment="Left" Margin="2"
                                 Fill="White" Stroke="#BDBDBD"/>
                                <ContentPresenter x:Name="Content" HorizontalAlignment="Center" 
                                VerticalAlignment="Center" Margin="10,0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Положение "Вкл" (True) -->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Thumb" Property="HorizontalAlignment" Value="Right"/>
                                <Setter TargetName="Thumb" Property="Fill" Value="#4CAF50"/>
                                <Setter TargetName="Thumb" Property="Margin" Value="2"/>
                            </Trigger>

                            <!-- Нейтральное положение (null) -->
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="Thumb" Property="HorizontalAlignment" Value="Center"/>
                                <Setter TargetName="Thumb" Property="Fill" Value="#FFC107"/>
                                <Setter TargetName="Thumb" Property="Margin" Value="0,2"/>
                            </Trigger>

                            <!-- Положение "Выкл" (False) - значения по умолчанию -->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SelectableLabelStyle" TargetType="Label">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Border x:Name="border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5" 
                            Padding="10">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Blue"/>
                                <Setter TargetName="border" Property="Background" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="SelectablePanelStyle" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5" Padding="10">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Blue"/>
                                <Setter TargetName="border" Property="Background" Value="LightBlue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="6,6,6,6">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="6,6,6,6">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#FF838383"/>
        <Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background2}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border2}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="6,6,6,6">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border2}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground2}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid x:Name="MainGrid" x:FieldModifier="public" LayoutTransform="{Binding ScaleTransform}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <!-- Занимает всё доступное пространство -->
        </Grid.RowDefinitions>
        <ScrollViewer Name="MainScroll" x:FieldModifier="public" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden" >
            <Grid Name="grid" x:FieldModifier="public" Background="#FFDDDDDD">

            </Grid>
        </ScrollViewer>
        <Label Name="NameUser" x:FieldModifier="public" Panel.ZIndex="1" HorizontalContentAlignment="Right" Content="Label" HorizontalAlignment="Left" Margin="487,7,0,0" VerticalAlignment="Top" Width="156" FontFamily="Arial Black" FontSize="20"/>


        <Image x:Name="PhotoImage" x:FieldModifier="public" Panel.ZIndex="1" HorizontalAlignment="Left" Height="41" Margin="656,1,0,0" VerticalAlignment="Top" Width="43">
            <Image.Source>
                <BitmapImage UriSource="free-icon-user-149071.png"/>
            </Image.Source>
        </Image>
        <Button Name="Exit" x:FieldModifier="public" Content="" Panel.ZIndex="1" HorizontalAlignment="Left" Margin="10,10,0,0" Click="Exit_to_Authorization"  VerticalAlignment="Top" Height="26" Width="26" BorderBrush="#FFDDDDDD">
            <Button.Background>
                <ImageBrush ImageSource="/arrow.png"/>
            </Button.Background>
        </Button>
        <Button Style="{DynamicResource ButtonStyle1}" Name="NewText" x:FieldModifier="public" Click="Click_NewEntry" Panel.ZIndex="1" Content="Добавить новую запись" Margin="49,8,516,0" Height="30" VerticalAlignment="Top"/>
        <Frame x:Name="TwoMainFrame" x:FieldModifier="public" NavigationUIVisibility="Hidden" />
        <Button Style="{DynamicResource ButtonStyle2}" Name="Edit" x:FieldModifier="public" Content="Редактировать" Click="Edit_Click" Panel.ZIndex="1" HorizontalAlignment="Left" Margin="212,8,0,0" VerticalAlignment="Top" Height="30" Width="123"/>
        <Button Style="{DynamicResource ButtonStyle3}" Name="Remove" x:FieldModifier="public" Content="Удалить" Click="Remove_Click" Panel.ZIndex="1" HorizontalAlignment="Left" Margin="340,9,0,0" VerticalAlignment="Top" Height="29" Width="100"/>
        <Button Style="{DynamicResource ButtonStyle3}" x:FieldModifier="public" Name="Report" Visibility="Hidden" Content="Создать отчёт" Click="Report_Click" Panel.ZIndex="1" HorizontalAlignment="Left" Margin="380,10,0,0" VerticalAlignment="Top" Height="29" Width="161" Background="#FF85C94F" RenderTransformOrigin="0.68,0.574"/>
        <Button Style="{DynamicResource ButtonStyle3}" Name="Ex" x:FieldModifier="public" Click="Ex_Click" Visibility="Hidden" Content="Отмена" Panel.ZIndex="1" HorizontalAlignment="Left" Margin="247,9,0,0" VerticalAlignment="Top" Height="29" Width="118" Background="#FFE64F4F"/>
        <Label Panel.ZIndex="1" Name="Help" x:FieldModifier="public" Visibility="Visible" Background="#00000000" Margin="23,9,516,768"/>
        <Menu Name="Menu" x:FieldModifier="public" Panel.ZIndex="1" HorizontalAlignment="Left" Margin="445,8,0,0" VerticalAlignment="Top" Height="30" Width="31" Background="#FFDDDDDD">
            <MenuItem Height="30" Width="32">
                <MenuItem.Icon>
                    <Image Source="/pdf-file.png" Margin="-3,-6,-10,-6"/>
                </MenuItem.Icon>
                <MenuItem Header="Сформировать отчёт по одному студенту" Click="OneStudent_Click"/>
                <MenuItem Header="Сформировать отчёт по группе студентов" Click="ManyStudent_Click"/>
                <MenuItem Header="Сформировать отчёт по некоторым характеристикам" Click="ProgressStudent_Click"/>
            </MenuItem>
        </Menu>
        <Label Visibility="Visible" Name="Panel" x:FieldModifier="public" Panel.ZIndex="0" HorizontalAlignment="Center" VerticalAlignment="Top" Height="47" Width="754" Background="Silver"/>
        <Label Name="Filter" x:FieldModifier="public" Visibility ="Hidden" HorizontalAlignment="Left" Margin="0,47,0,0" VerticalAlignment="Top" Height="759" Width="193" Background="Silver" FontFamily="Arial Black" FontSize="22"/>
        <TextBox Visibility="Hidden" x:FieldModifier="public" Name="MaxRating" HorizontalAlignment="Left" Margin="40,161,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="136" FontSize="16"/>
        <TextBox Visibility="Hidden" x:FieldModifier="public" Name="NumberCourse" HorizontalAlignment="Left" Margin="2,256,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="174" Height="23" FontSize="16"/>
        <TextBox Visibility="Hidden" x:FieldModifier="public" Name="MinRating" HorizontalAlignment="Left" Margin="40,129,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="136" Height="22" FontSize="16"/>
        <CheckBox Visibility="Hidden" x:Name="ToggleSwitch" x:FieldModifier="public" IsThreeState="True" IsChecked="{x:Null}" Style="{StaticResource ModernTriStateToggleSwitch}"
Margin="10,339,560,371" BorderBrush="#FF8D7C7C" Foreground="Black" Background="White"/>
        <Button Visibility="Hidden" Style="{DynamicResource ButtonStyle3}" x:Name="Filter_Button" x:FieldModifier="public" Content="Применить" Click="Filter_Click" Panel.ZIndex="1" HorizontalAlignment="Left" Margin="31,413,0,0" VerticalAlignment="Top" Height="34" Width="131"/>
    </Grid>
</Window>
